#include <bits/stdc++.h>
using namespace std;
#define ll int
ll knapSack(ll wt[], ll val[], ll n,ll W)
{
    ll i, w,j;
    ll dp[n + 1][W + 1];
    for (i = 0; i <= n; i++)
    {
        for (j = 0; j <= W; j++)
        {
            if (i == 0 || j == 0)dp[i][j] = 0;
 
            else if (wt[i - 1] <= j)
                dp[i][j] = max(dp[i-1][j] , val[i-1]+dp[i-1][j-wt[i-1]]);
 
            else
                dp[i][j] = dp[i - 1][j];
        }
    }
    return dp[n][W];
}
int main()
{
    vector<ll>v,v1;
    map<ll,ll>mp;
    ll n,m,j,i,k,len,z,p,x,y,h;
    cin>>n>>k;
    ll a[n+2],b[n+2];
    for(i=0; i<n; i++)
    {
        cin>>a[i];
    }
    for(i=0; i<n; i++)
    {
        cin>>b[i];
    }
    x=knapSack(a,b,n,k);
    cout<<x<<endl;
}
